import pandas as pd
import numpy as np
from backtesting import Backtest, Strategy
from backtesting.lib import crossover

class MeanReversionStrategy(Strategy):
    adx_threshold = 25
    lookback_period = 20
    stddev_multiplier = 2.0
    stop_loss_multiplier = 1.0
    risk_reward_ratio = 2.0
    atr_period = 14

    def init(self):
        # Calculate Bollinger Bands
        self.middle = self.I(lambda x: pd.Series(x).rolling(self.lookback_period).mean(), self.data.Close)
        self.std = self.I(lambda x: pd.Series(x).rolling(self.lookback_period).std(), self.data.Close)
        self.upper = self.I(lambda: self.middle + self.stddev_multiplier * self.std)
        self.lower = self.I(lambda: self.middle - self.stddev_multiplier * self.std)

        # Calculate ADX
        self.adx = self.I(self.calculate_adx, self.data.High, self.data.Low, self.data.Close)

        # Calculate ATR
        self.atr = self.I(self.calculate_atr, self.data.High, self.data.Low, self.data.Close)

    def calculate_adx(self, high, low, close, period=14):
        plus_dm = np.zeros(len(high))
        minus_dm = np.zeros(len(high))
        tr = np.zeros(len(high))
        
        for i in range(1, len(high)):
            plus_dm[i] = max(high[i] - high[i-1], 0)
            minus_dm[i] = max(low[i-1] - low[i], 0)
            tr[i] = max(high[i] - low[i]